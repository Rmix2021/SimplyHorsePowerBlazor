@page "/AddProduct"
@*@using static SimplyHorsePower.Services.FileUploaderService;*@

@inject ProductService productService
@inject MakeService makeService
@inject CategoryService categoryService
@inject NavigationManager NavigationManager
@inject ILogger<AddProduct> Logger
@inject IWebHostEnvironment env

<h3>Add Product</h3>
    <div>
        <form method="post" enctype="multipart/form-data" asp-page-handler="Submit">
            <label>Product Name:</label>
            <input type="text" @bind="productObject.ProductName"><br />
            <label>Product Price:</label>
            <input type="number" step="0.01" @bind="productObject.ProductPrice"><br />
            <label>Product Description:</label>
            <input type="text" @bind="productObject.ProductDescription"><br />
        <label>Brand:</label>
            <InputSelect @bind-Value="productObject.MakeId" class="form-control" style="width:min-content">
                <option value="">Brand</option>
                @foreach (var make in MakeList)
                {
                    <option value="@make.MakeId" style="width:auto">@make.MakeName</option>
                }
            </InputSelect>
            <InputSelect @bind-Value="productObject.CategoryId" class="form-control" style="width:min-content">
                <option value="">Category</option>
                @foreach (var category in CategoryList)
                {
                    <option value="@category.CategoryId" style="width:auto">@category.CategoryName</option>
                }
            </InputSelect>

            <InputFile OnChange="OnInputFileChange" />
             <br /><br />

            <input type="button" class="btn btn-primary" @onclick="@CreateNewProductAsync" value="Save" />
   
        </form>
    </div>

@code {
    //public AddProductData productObject { get; set; }
    Product productObject = new Product();  

    [BindProperty]
    public string makeId { get; set; }

    [BindProperty]
    public string categoryId { get; set; }

    public List<Make> MakeList { get; set; } = new List<Make>();

    public List<Category> CategoryList { get; set; } = new List<Category>();

    string Message = "No file(s) selected";
    IReadOnlyList<IBrowserFile> selectedFiles; 

    private List<IBrowserFile> loadedFiles = new();

    protected override async Task OnInitializedAsync()
    {
        //productObject = new AddProductData();
        MakeList = await makeService.GetAllMakesAsync();
        //MakeDropdownList.Insert(0, new Make("Select one", null, false));
        CategoryList = await categoryService.GetAllCategoriesAsync();
        //CategoryList.Insert(0, new SelectListItem("Select one", null, false));
    }


    private void OnInputFileChange(InputFileChangeEventArgs e)
    {
        selectedFiles = e.GetMultipleFiles();
        Message = $"{selectedFiles.Count} file(s) selected";
        this.StateHasChanged();

        // you need to do something here with the files, like add them to your Blog
        var file = selectedFiles.First();
    }


    private async void FileUpload()
    {
        foreach (var file in selectedFiles)
        {
            Stream stream = file.OpenReadStream(maxAllowedSize: 1024 * 100000);
            var path = $"{env.WebRootPath}\\ProductMainImages\\{file.Name}";
            productObject.MainProductImageLocation = $"\\ProductMainImages\\{file.Name}";
            FileStream fs = File.Create(path);
            await stream.CopyToAsync(fs);
            stream.Close();
            fs.Close();
        }
        Message = $"{selectedFiles.Count} file(s) uploaded on server";
        this.StateHasChanged();
    } 



    protected async void CreateNewProductAsync()
    {


        FileUpload();
        await productService.AddNewProductAsync(productObject);
        NavigationManager.NavigateTo("./ProductsMenu");
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("./ProductsMenu");
    }



}